[tool.poetry]
name = "nautobot-golden-config"
version = "2.0.0"
description = "An app for configuration on nautobot"
authors = ["Network to Code, LLC <opensource@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://docs.nautobot.com/projects/golden-config/en/latest/"
repository = "https://github.com/nautobot/nautobot-app-golden-config"
documentation = "https://docs.nautobot.com/projects/golden-config/en/latest/"
keywords = ["nautobot", "nautobot-plugin", "nautobot-app"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_golden_config" },
]

[tool.poetry.urls]
"Changelog" = "https://docs.nautobot.com/projects/golden-config/en/latest/admin/release_notes/"
"Bug Tracker" = "https://github.com/nautobot/nautobot-app-golden-config/issues"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
deepdiff = ">=5.5.0,!=6.0,!=6.1,<7"
django-pivot = "1.8.1" # The signature changed to return a non-queryset, do not upgrade without ensuring it returns a queryset
matplotlib = "^3.3.2"
nautobot-plugin-nornir = "^2.0.0"

toml = "^0.10.2"
netutils = "^1.5.0"
hier-config = "^2.2.2"
nautobot-capacity-metrics = "^3.0.1"

[tool.poetry.group.dev.dependencies]
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
flake8 = "*"
invoke = "*"
ipython = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
pylint-nautobot = "*"
yamllint = "*"
Markdown = "*"
# Rendering docs to HTML
mkdocs = "1.5.2"
# Material for MkDocs theme
mkdocs-material = "9.2.4"
# Render custom markdown for version added/changed/remove notes
mkdocs-version-annotations = "1.0.0"
# Automatic documentation from sources, for MkDocs
mkdocstrings = "0.22.0"
mkdocstrings-python = "1.5.2"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django, pylint_nautobot"
ignore-patterns=["jinja_filters.py", ".venv"]
ignore-paths = '^.*/migrations/.*$'

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"
good-names = ["pk"]

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    too-few-public-methods,
    duplicate-code,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
# TODO D417 is not in the template, verify this
add_ignore = "D212,D417"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint-nautobot]
supported_nautobot_versions = ["2"]
