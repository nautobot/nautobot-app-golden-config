# Generated by Django 3.2.20 on 2023-09-16 17:31

import secrets
from datetime import timedelta

from django.db import migrations, models


def ensure_config_plan_created_timestamps_are_unique(apps, schema_editor):
    ConfigPlan = apps.get_model("nautobot_golden_config", "ConfigPlan")
    natural_key_fields = ["plan_type", "device", "created"]

    # We append some random milliseconds of time to avoid duplicate timestamps for Config Plan objects created field

    duplicate_records = (
        ConfigPlan.objects.values(*natural_key_fields)
        .order_by()
        .annotate(
            count=models.Count("pk"),
        )
        .filter(count__gt=1)
    )

    for duplicate_record in duplicate_records:
        duplicate_record.pop("count")
        for record in ConfigPlan.objects.filter(**duplicate_record):
            record.created += timedelta(milliseconds=secrets.randbelow(1000))
            record.save()


class Migration(migrations.Migration):
    dependencies = [
        ("dcim", "0049_remove_slugs_and_change_device_primary_ip_fields"),
        ("nautobot_golden_config", "0028_auto_20230916_1712_part2"),
    ]

    operations = [
        # I know that data migrations are not recommended in the same migration as schema changes,
        # but since there are already released migrations with users that had successful migrations
        # doing this is the only way to ensure that we don't break their data, but are also able to fix the issue.
        migrations.RunPython(
            code=ensure_config_plan_created_timestamps_are_unique,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterUniqueTogether(
            name="configplan",
            unique_together={("plan_type", "device", "created")},
        ),
    ]
